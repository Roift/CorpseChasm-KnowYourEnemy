import requests

def enrich_hash_malwarebazaar(hash_value: str) -> dict:
    url = "https://mb-api.abuse.ch/api/v1/"
    payload = {
        "query": "get_info",
        "hash": hash_value
    }

    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        data = response.json()

        if data.get("query_status") != "ok":
            return {
                "hash": hash_value,
                "query_status": data.get("query_status"),
                "message": "No data found for this hash"
            }

        attributes = data.get("data", [{}])[0]  # Get the first entry

        return {
            "hash": hash_value,
            "query_status": data.get("query_status"),
            "file_name": attributes.get("file_name"),
            "file_type_mime": attributes.get("file_type_mime"),
            "file_type": attributes.get("file_type"),
            "signature": attributes.get("signature"),
            "tags": attributes.get("tags"),
            "first_seen": attributes.get("first_seen"),
            "last_seen": attributes.get("last_seen"),
            "ssdeep": attributes.get("ssdeep"),
            "imphash": attributes.get("imphash"),
            "md5": attributes.get("md5"),
            "sha1": attributes.get("sha1"),
            "sha256": attributes.get("sha256"),
            "signature_status": attributes.get("signature_status"),
            "signature_malware_class": attributes.get("signature_malware_class"),
        }

    except Exception as e:
        return {
            "hash": hash_value,
            "query_status": "error",
            "message": str(e)
        }
